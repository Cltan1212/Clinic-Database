SQL> drop table enrolment cascade constraints purge;

Table dropped.

SQL> drop table student cascade constraints purge;

Table dropped.

SQL> drop table unit cascade constraints purge;

Table dropped.

SQL> drop table course cascade constraints purge;

Table dropped.

SQL> -- drop table student PURGE;
SQL> -- drop table unit PURGE;
SQL> -- drop table enrolment PURGE;
SQL> -- Create Tables
SQL> -- Here using both table and column constraints
SQL> --
SQL> CREATE TABLE student (
  2      stu_nbr     NUMBER(8) NOT NULL,
  3      stu_lname   VARCHAR2(50) NOT NULL,
  4      stu_fname   VARCHAR2(50) NOT NULL,
  5      stu_dob     DATE NOT NULL
  6  );

TABLE created.

SQL> COMMENT ON COLUMN student.stu_nbr IS
  2      'Student number';
Comment created.

SQL> COMMENT ON COLUMN student.stu_lname IS
  2      'Student last name';
Comment created.

SQL> COMMENT ON COLUMN student.stu_fname IS
  2      'Student first name';
Comment created.

SQL> COMMENT ON COLUMN student.stu_dob IS
  2      'Student date of birth';
Comment created.

SQL> /* Add STUDENT constraints here */
SQL> ALTER TABLE student ADD CONSTRAINT stu_pk PRIMARY KEY (stu_nbr);

TABLE altered.

SQL> ALTER TABLE student ADD CONSTRAINT check_studenet CHECK (stu_nbr > 10000);

TABLE altered.

SQL> /* Add UNIT data types here */
SQL> CREATE TABLE unit (
  2      unit_code   CHAR(7) NOT NULL,
  3      unit_name   VARCHAR2(50) NOT NULL
  4  );

TABLE created.

SQL> COMMENT ON COLUMN unit.unit_code IS
  2      'Unit code';
Comment created.

SQL> COMMENT ON COLUMN unit.unit_name IS
  2      'Unit name';
Comment created.

SQL> /* Add UNIT constraints here */
SQL> ALTER TABLE unit ADD CONSTRAINT  unit_pk PRIMARY KEY (unit_code);

TABLE altered.

SQL> ALTER TABLE unit ADD CONSTRAINT check_unit_name UNIQUE(unit_name);

TABLE altered.

SQL> ALTER TABLE unit ADD unit_credit NUMBER(2);

TABLE altered.

SQL> ALTER TABLE unit
  2      MODIFY unit_credit DEFAULT 6;

TABLE altered.

SQL> ALTER TABLE unit
  2      ADD CONSTRAINT check_unit_credit CHECK (unit_credit IN (3,6,9));

TABLE altered.

SQL> ALTER TABLE unit ADD course_code CHAR(4);

TABLE altered.

SQL> /* Add ENROLMENT attributes and data types here */
SQL> CREATE TABLE enrolment (
  2      stu_nbr     NUMBER(8) NOT NULL,
  3      unit_code   CHAR(7) NOT NULL,
  4      enrol_year  NUMBER(4) NOT NULL,
  5      enrol_semester  CHAR(1) NOT NULL,
  6      enrol_mark  NUMBER(3),
  7      enrol_grade CHAR(2)
  8
  9  );

TABLE created.

SQL> COMMENT ON COLUMN enrolment.stu_nbr IS
  2      'Student number';
Comment created.

SQL> COMMENT ON COLUMN enrolment.unit_code IS
  2      'Unit code';
Comment created.

SQL> COMMENT ON COLUMN enrolment.enrol_year IS
  2      'Enrolment year';
Comment created.

SQL> COMMENT ON COLUMN enrolment.enrol_semester IS
  2      'Enrolment semester';
Comment created.

SQL> COMMENT ON COLUMN enrolment.enrol_mark IS
  2      'Enrolment mark (real)';
Comment created.

SQL> COMMENT ON COLUMN enrolment.enrol_grade IS
  2      'Enrolment grade (letter)';
Comment created.

SQL> /* Add ENROLMENT constraints here */
SQL> ALTER TABLE enrolment ADD CONSTRAINT enrol_pk PRIMARY KEY (stu_nbr, unit_code, enrol_year, enrol_semester);

TABLE altered.

SQL> ALTER TABLE enrolment
  2      ADD CONSTRAINT enrolment_student_fk FOREIGN KEY (stu_nbr)
  3          REFERENCES student (stu_nbr)
  4              ON DELETE SET NULL;

TABLE altered.

SQL> ALTER TABLE enrolment
  2      ADD CONSTRAINT enrolment_UNIT_fk FOREIGN KEY (unit_code)
  3          REFERENCES unit (unit_code)
  4              ON DELETE SET NULL;

TABLE altered.

SQL> ALTER TABLE enrolment
  2      ADD CONSTRAINT check_enrol_semester
  3          CHECK (enrol_semester IN (1,2,3));

TABLE altered.

SQL> CREATE TABLE course (
  2      course_code         CHAR(5) NOT NULL,
  3      course_name         VARCHAR2(100) NOT NULL,
  4      course_totalpoints  NUMBER(3) NOT NULL
  5
  6  );

TABLE created.

SQL> ALTER TABLE course ADD CONSTRAINT course_pk PRIMARY KEY (course_code);

TABLE altered.

SQL> ALTER TABLE unit
  2      ADD CONSTRAINT unit_course FOREIGN KEY (course_code)
  3          REFERENCES course (course_code)
  4              ON DELETE SET NULL;

TABLE altered.

SQL> spool off

